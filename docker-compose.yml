version: '3.9'

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.1.0/24
          ip_range: 172.23.1.0/24
          gateway: 172.23.1.1
    driver_opts:
      com.docker.network.bridge.name: "igorsrv"

services:
  dcsm.igor:
    image: ghcr.io/igor47/dcsm:v0.3.0
    environment:
      - DCSM_KEYFILE=/secrets/key.private
      - DCSM_SECRETS_FILE=/secrets/secrets.encrypted
      - DCSM_SOURCE_FILE=/secrets/secrets.yaml
      - DCSM_TEMPLATE_DIR=/config
      - DCSM_TEMPLATE_DIR2=/init_scripts
    volumes:
      - ./secrets:/secrets
      - ./config:/config
      - ./init_scripts:/init_scripts

  traefik.igor:
    image: traefik:v2.9
    restart: unless-stopped
    labels:
      traefik.enable: true
      service.owner: igor
      traefik.http.routers.traefik.rule: "Host(`traefik.igor.moomers.org`)"
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.middlewares: authentik@file
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: le
      traefik.http.routers.traefik.entrypoints: https
    ports:
      - "173.236.34.123:80:80"
      - "173.236.34.123:443:443"
      - "173.236.34.123:22047:22047"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik:/etc/traefik
      - ./storage/traefik/acme:/acme

  miniflux.igor:
    image: miniflux/miniflux:latest
    restart: unless-stopped
    labels:
      traefik.enable: true
      service.owner: igor
      traefik.http.routers.miniflux.rule: "Host(`miniflux.igor.moomers.org`)"
      traefik.http.routers.miniflux.tls: true
      traefik.http.routers.miniflux.tls.certresolver: le
      traefik.http.routers.miniflux.entrypoints: https
    depends_on:
      dcsm.igor:
        condition: service_completed_successfully
      postgres.igor:
        condition: service_healthy
    env_file:
      - ./config/miniflux/config.env

  postgres.igor:
    image: postgres:14.6
    restart: unless-stopped
    labels:
      traefik.enable: false
      service.owner: igor
    volumes:
      - ./storage/postgres/data:/var/lib/postgresql/data
      - ./init_scripts:/init_scripts
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      start_period: 30s
    stop_grace_period: 60s

  caddy:
    image: caddy:latest
    restart: unless-stopped
    labels:
      traefik.enable: true
      service.owner: igor
      traefik.http.services.caddy.loadbalancer.server.port: 8080
      traefik.http.routers.caddy.rule: "Host(`igor.moomers.org`,`igor47.moomers.org`,`igor.monksofcool.org`,`igor47.monksofcool.org`)"
      traefik.http.routers.caddy.tls: true
      traefik.http.routers.caddy.tls.certresolver: le
      traefik.http.routers.caddy.entrypoints: https
      traefik.http.routers.igor47.rule: "Host(`igor47.com`, `www.igor47.com`)"
      traefik.http.routers.igor47.tls: true
      traefik.http.routers.igor47.tls.certresolver: le
      traefik.http.routers.igor47.entrypoints: https
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${HOME}/www:/www
      - ./storage/caddy/data:/data
      - ./storage/caddy/config:/config

  # Example Docker Compose config file for PhotoPrism (Linux / AMD64)
  #
  # Note:
  # - Hardware transcoding is only available for sponsors due to the high maintenance and support effort.
  # - Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected
  #   restarts ("crashes"), for example, when the indexer temporarily needs more memory to process large files.
  # - If you install PhotoPrism on a public server outside your home network, please always run it behind a secure
  #   HTTPS reverse proxy such as Traefik or Caddy. Your files and passwords will otherwise be transmitted
  #   in clear text and can be intercepted by anyone, including your provider, hackers, and governments:
  #   https://docs.photoprism.app/getting-started/proxies/traefik/
  #
  # Setup Guides:
  # - https://docs.photoprism.app/getting-started/docker-compose/
  # - https://docs.photoprism.app/getting-started/raspberry-pi/
  #
  # Troubleshooting Checklists:
  # - https://docs.photoprism.app/getting-started/troubleshooting/
  # - https://docs.photoprism.app/getting-started/troubleshooting/docker/
  # - https://docs.photoprism.app/getting-started/troubleshooting/mariadb/
  #
  # CLI Commands:
  # - https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
  #
  # All commands may have to be prefixed with "sudo" when not running as root.
  # This will point the home directory shortcut ~ to /root in volume mounts.

  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    restart: unless-stopped
    labels:
      traefik.enable: true
      service.owner: igor
      traefik.http.routers.photos.rule: "Host(`photos.igor.moomers.org`)"
      traefik.http.routers.photos.tls: true
      traefik.http.routers.photos.tls.certresolver: le
      traefik.http.routers.photos.entrypoints: https
    depends_on:
      - mariadb.igor
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      PHOTOPRISM_ADMIN_USER: "igor47"                 # superadmin username
      PHOTOPRISM_ADMIN_PASSWORD: "JK72Enq9hDog"          # initial superadmin password (minimum 8 characters)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "https://photos.igor.moomers.org/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "true"                    # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "true"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "true"              # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "true"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb.igor:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "ZRXmzoaMJuW"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "Igor's Photos"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      PHOTOPRISM_SPONSOR: "true"
      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "https gpu tensorflow"
      PHOTOPRISM_INIT: "gpu tensorflow clitools"
      ## Hardware Video Transcoding:
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    devices:
      - "/dev/dri:/dev/dri"                         # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      - ./storage/photoprism/Pictures:/photoprism/originals               # Original media files (DO NOT REMOVE)
      - ${HOME}/DCIM:/photoprism/originals/DCIM    # *Additional* media folders can be mounted like this
      - ./storage/photoprism/storage:/photoprism/storage # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb.igor:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    image: mariadb:10.10
    restart: unless-stopped
    labels:
      traefik.enable: false
      service.owner: igor
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - ./storage/mariadb/mysql:/var/lib/mysql
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "ZRXmzoaMJuW"
      MARIADB_ROOT_PASSWORD: "JHPIILfwbVRpb9"
    stop_grace_period: 60s

  # syncthing
  syncthing.igor:
    image: syncthing/syncthing
    restart: unless-stopped
    hostname: syncthing.igor.moomers.org
    labels:
      traefik.enable: true
      service.owner: igor
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
      traefik.http.routers.syncthing.rule: "Host(`syncthing.igor.moomers.org`)"
      traefik.http.routers.syncthing.tls: true
      traefik.http.routers.syncthing.tls.certresolver: le
      traefik.http.routers.syncthing.entrypoints: https
      traefik.http.routers.syncthing.middlewares: authentik@file
      traefik.tcp.routers.syncthingtcpr.entrypoints: syncthingtcpe
      traefik.tcp.routers.syncthingtcpr.service: syncthingtcps
      traefik.tcp.routers.syncthingtcpr.rule: "HostSNI(`*`)"
      traefik.tcp.routers.syncthingtcpr.tls.passthrough: true
      traefik.tcp.services.syncthingtcps.loadbalancer.server.port: 22000
      traefik.udp.routers.syncthingudpr.entrypoints: syncthingudpe
      traefik.udp.routers.syncthingudpr.service: syncthingudps
      traefik.udp.services.syncthingudps.loadbalancer.server.port: 22000
    environment:
      - PUID=1000
      - PGID=113
    volumes:
      - ./storage/syncthing:/var/syncthing
      # actual directories we want to sync to other machines
      - ${HOME}/Sync:/synced/Sync
      - ${HOME}/documents:/synced/documents
      - ${HOME}/Downloads:/synced/Downloads
      - /media/music:/synced/music
      - ${HOME}/DCIM/chirper:/synced/chirper
      - ${HOME}/DCIM/turboscan:/synced/turboscan
      - ${HOME}/DCIM/local:/synced/local
    #ports:
    #  - "22000/tcp" # TCP file transfers
    #  - "22000/udp" # QUIC file transfers
    #  - "21027:21027/udp" # Receive local discovery broadcasts

  # my blog
  blog.igor:
    image: ghcr.io/igor47/blog:latest
    restart: unless-stopped
    hostname: blog.igor.moomers.org
    labels:
      traefik.enable: true
      service.owner: igor
      traefik.http.routers.blog.rule: "Host(`blog.igor.moomers.org`)"
      traefik.http.routers.blog.tls: true
      traefik.http.routers.blog.tls.certresolver: le
      traefik.http.routers.blog.entrypoints: https
    expose:
      - "3000"

  # proxy outpost for authentik
  authentik.proxy.igor:
    image: ghcr.io/goauthentik/proxy
    restart: unless-stopped
    environment:
      AUTHENTIK_HOST: https://auth.moomers.org
      AUTHENTIK_INSECURE: "false"
    env_file:
      ./storage/authentik/env
    labels:
      service.owner: igor
      traefik.enable: true
      traefik.http.routers.authentik.rule: "HostRegexp(`{subdomain:[a-z]+}.igor.moomers.org`) && PathPrefix(`/outpost.goauthentik.io/`)"
